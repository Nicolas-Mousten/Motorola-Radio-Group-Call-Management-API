openapi: 3.0.0
info:
  title: Floor Control API
  description: An API for managing a "floor" in a push-to-talk radio group system.
  version: 1.0.0
servers:
  - url: http://localhost:8080 or http://localhost:30080
    description: Local dev server

paths:
  /groups/{groupId}/floor:
    post:
      summary: Obtain the Floor (Push to Talk)
      description: Allows a user to request and obtain the "floor" for a specified radio group. Only one user can hold the floor at a time. Supports priority-based requests.
      operationId: obtainFloor
      tags:
        - Floor Control
      parameters:
        - name: groupId
          in: path
          description: The ID of the group for which to obtain the floor.
          required: true
          schema:
            type: string
            example: "group-alpha-123"
      requestBody:
        description: User requesting the floor, optionally with priority (1-5).
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: Successfully obtained the floor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad Request - Missing or invalid userId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                message: "Invalid request: userId is required"
        '409':
          description: Conflict - Floor is currently held by another user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                message: "Floor is currently held by user-789 for group group-alpha-123"

  /groups/{groupId}/floor/{userId}:
    delete:
      summary: Release the Floor
      description: Allows a user to release the floor they are holding for a specified group.
      operationId: releaseFloor
      tags:
        - Floor Control
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            example: "group-alpha-123"
        - name: userId
          in: path
          required: true
          schema:
            type: string
            example: "user-456"
      responses:
        '200':
          description: Successfully released the floor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              example:
                message: "Floor released by user-456 for group group-alpha-123"
        '403':
          description: Forbidden - The requesting user does not hold the floor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                message: "User user-456 does not hold the floor for group group-alpha-123"

  /groups/{groupId}/floor/occupant:
    get:
      summary: Get Current Floor Occupant
      description: Retrieve the user currently holding the floor for a specified group.
      operationId: getCurrentOccupant
      tags:
        - Floor Control
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            example: "group-alpha-123"
      responses:
        '200':
          description: Current occupant found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                    example: "user-456"
        '404':
          description: No occupant for the group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                message: "No occupant for group group-alpha-123"

  /groups/{groupId}/floor/audit:
    get:
      summary: Retrieve Floor Audit Log
      description: Fetches the audit log detailing all floor-related actions (obtain, release, preempt, timeout) for a specified group.
      operationId: getFloorAudit
      tags:
        - Floor Control
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            example: "group-alpha-123"
      responses:
        '200':
          description: Audit log retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  audit:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuditEntry'

components:
  schemas:
    UserRequest:
      type: object
      required:
        - userId
      properties:
        userId:
          type: string
          description: The unique identifier for the user.
          example: "user-456"
        priority:
          type: integer
          description: Optional priority level (1-5) for obtaining the floor.
          minimum: 1
          maximum: 5
          example: 3

    SuccessResponse:
      type: object
      properties:
        message:
          type: string
          description: Success message for the operation.
          example: "Floor obtained by user-456 for group group-alpha-123"

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: A human-readable error message.
          example: "Invalid request: userId is required"

    AuditEntry:
      type: object
      properties:
        userId:
          type: string
          description: ID of the user performing the action.
          example: "user-456"
        action:
          type: string
          description: Type of action (obtain, release, preempt, timeout).
          example: "obtain"
        timestamp:
          type: string
          format: date-time
          description: When the action occurred.
          example: "2025-10-18T12:34:56Z"
        groupId:
          type: string
          description: The ID of the group for which the action occurred.
          example: "group-alpha-123"